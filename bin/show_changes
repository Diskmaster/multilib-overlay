#!/bin/bash

# IMPORTANT NOTE: You will need an actual CVS checkout of the portage tree,
# which you'll probably want to update before running this script.  You can
# export the following variable in your shell's environment to wherever yours
# is.

: ${EMULTILIB_CVS_TREE:="$(portageq portdir)"}
: ${EMULTILIB_CVS_TREE:="/usr/portage"}

usage() {
    printf >&2 '%s\n' "" \
    "Usage:" \
    "bin/show_changes [ --overlay | -o ] cat/pkg/pkg.ebuild" \
    "bin/show_changes [ --overlay | -o ] eclass/file.eclass" \
    "bin/show_changes cat/pkg/pkg-1.ebuild cat/pkg/pkg-2.ebuild" \
    "  Show changes in portage since ebuild in overlay was last updated." \
    "  With two filenames, show changes in portage between them." \
    "" \
    "--overlay | -o" \
    "  Instead, show the difference between equivalent revisions of portage" \
    "  ebuild with overlay ebuild."
    exit "$1"
}


# ----------------------------------------------
# BUMPS -- NEW VERSIONS IN PORTAGE
# ----------------------------------------------
#
#    # cd path/to/multilib/overlay
#    # bin/show_changes cat/pkg/pkg-{1,2}.ebuild
#
# <Take note of the REVISION of the 2nd file in the diff output's CVS header>
#
# <in another terminal:>
#    # cp cat/pkg/pkg-{1,2}.ebuild
#    # $EDITOR cat/pkg/pkg-2.ebuild
#
# <make the appropriate changes from above>
#
# <also, you MUST fix the header's filename and change the revision to the>
# <one noted above, which will usually but not always be 1.1>
#
# ----------------------------------------------
# UPDATES TO EBUILDS/ECLASSES ALREADY IN OVERLAY
# ----------------------------------------------
#
#    # cd path/to/multilib/overlay
#    # bin/show_changes cat/pkg/pkg.ebuild
#
# <read output, edit the ebuild in another terminal, save it>
#
# ----------------------------------------------
# IF EITHER OF THE ABOVE HAS TOO MANY CHANGES
# ----------------------------------------------
#
# <you decide to copy the ebuild from portage and apply the overlay changes>
# <essentially from scratch>
#
#    $ bin/show_changes cat/pkg/pkg.ebuild -o
#
# <this is with the older ebuild, if this is a bump scenario>
#
# <this shows the diff between the (outdated) overlay ebuild and the SAME>
# <revision in the portage tree>
#
# <in another terminal:>
#
#    # cp {/usr/portage/,}cat/pkg/pkg.ebuild
#    # bin/make_multilib cat/pkg/pkg.ebuild
#    # $EDITOR cat/pkg/pkg.ebuild
#
# ----------------------------------------------

# ----------------------------------------------
# AFTER ANY OF THESE
# ----------------------------------------------
#
#    # bin/show_changes cat/pkg/pkg.ebuild -o
#
# <check your changes, no typos, correct header>
#
#    # eix -e pkg    # check to see if some versions need to be rm'ed
#    # ebuild cat/pkg/pkg.ebuild digest    # or repoman manifest
#    # egencache --repo=multilib --update
#
# ----------------------------------------------

die() {
    local line
    for line in "${@:2}"
    do
        printf >&2 '%s\n' "$0: $line"
    done
    exit "$1"
}

[[ "$( cat ./profiles/repo_name 2>/dev/null )" = "multilib" ]] || \
    die 1 "Please cd to your multilib overlay directory first"

for arg
do
    case "$arg" in
        --overlay|-o)
            check_mode="true" ;;
        --help|-h)
            usage 0 ;;
        -*)
            echo >&2 "Unknown option '$arg'"
            usage 1 ;;
        *)
            if [[ "$file2" ]]
            then
                echo >&2 "Provide one filename only"
                usage 1
            elif [[ "$file" ]]
            then
                file2="$arg"
            else
                file="$arg"
            fi ;;
    esac
done

if [[ "$file2" ]] && [[ "$check_mode" ]]
then
    echo >&2 "Doesn't make sense to give two filenames and --overlay"
    usage 1
fi

if ! [[ "$file" ]]
then
        echo >&2 "You must provide a filename"
        usage 1
fi

overlay_revision="$(awk -v file="$file" '

    /# \$Header: / {
        if ( $3 == "/var/cvsroot/gentoo-x86/" file ",v" ) {
            print $4
        }
        exit;
    }

    ' "$file")" || die 3 "couldn't get CVS revision of '$file'"

if ! [[ "$overlay_revision" ]]
then
    overlay_revision="1.1"
    echo "'$file' in overlay has broken CVS header, PLEASE fix it asap"
fi

pushd >/dev/null "$EMULTILIB_CVS_TREE" || \
    die 2 "pushd '$EMULTILIB_CVS_TREE' failed"

# cvs diff doesn't work all that nicely with Attic files, so screw it
# let's use diff with cvs update -p instead!

if [[ "$file2" ]]
then

    # this is a bumping scenario, so it makes more sense to use the revision
    # number from the overlay than the latest one for the first file: otherwise
    # you'd need to update the old ebuild to latest and then maybe delete it
    # after!

    # If we're bumping, file2 had better exist

    [[ -f $file2 ]] || die 2 "$file2 doesn't exist in portage tree!"

    echo "Comparing:"
    echo "--- $file from portage, revision $overlay_revision"
    echo "+++ $file2 from portage, revision latest"
    echo ""

    diff -u <(cvs update -p -r "$overlay_revision" "$file") "$file2"
    case $? in
        0) echo "No difference between them!  Awesome!" ;;
        1) : ;;
        *) die 2 "diff failed with exit code $?" ;;
    esac

elif [[ "$check_mode" = "true" ]]
then

    echo "Comparing:"
    echo "--- $file from portage, revision $overlay_revision"
    echo "+++ $file from overlay, revision $overlay_revision"
    echo ""

    diff -u <(cvs update -p -r "$overlay_revision" "$file") "$OLDPWD/$file"
    case $? in
        0) die 3 "No differences between portage and overlay ebuild." \
            "Why is it even in the overlay?" ;;
        1) : ;;
        *) die 2 "diff failed with exit code $?" ;;
    esac

else

    if ! [[ -f "$file" ]]
    then
        echo "NOTE: File has been removed from portage."
        # try to get the last revision before the delete
        last_r="$(cvs status "$file" | awk -F '([ \t]+|[.])' \
            '/Repository revision:/ { print $4 "." $5 - 1; exit }' )"

        if [[ "$last_r" = *[!0-9.]* ]] || [[ "$last_r" = *.*.* ]]
        then
            echo "Invalid last revision '$last_r' detected"
            last_r=""
        fi
    fi

    echo "Comparing:"
    echo "--- $file from portage, revision $overlay_revision"
    echo "+++ $file from portage, revision ${last_r:-latest}"
    echo ""

    if [[ "$overlay_revision" != "$last_r" ]]
    then
        diff -u <(cvs update -p -r "$overlay_revision" "$file") \
            <(cvs update -p ${last_r:+-r "$last_r"} "$file")
    fi

    case $? in
        0) echo "No updates taken place in portage since overlay ebuild was" \
            "last updated." ;;
        1) : ;;
        *) die 2 "diff failed with exit code $?" ;;
    esac

fi

popd >/dev/null || die 2 "popd failed"

if [[ -d "$EMULTILIB_CVS_TREE/${file%/*}/files/" ]]
then
    echo "==================================================================="
    diff -ur -x CVS "$EMULTILIB_CVS_TREE/${file%/*}/files/" \
        "${file%/*}/files/"
    case $? in
        0) echo "No differences in '${file%/*}/files/'" ;;
        1) : ;;
        *) die 2 "diff failed with exit code $?" ;;
    esac
fi
