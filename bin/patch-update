#!/bin/bash 

# patch-update - A quick version of refreshing a patch for a specific ebuild, use me with care. .ebuild extension auto-assumed. Intentionally dumb.
# $1 should be the full atom plus the ebuild without extension. e.g. www-client/mozilla-firefox/mozilla-firefox-3.6.7

# bin/auto-sync-cfg should be in .gitignore.
if [[ -f bin/auto-sync-cfg ]]; then
	echo_green "Passed auto-sync-cfg sanity check."
	source bin/auto-sync-cfg
else
	echo_red "Failed auto-sync-cfg sanity check, copying from .skel. You may wanna review it!"
	cp -v bin/auto-sync-cfg.skel bin/auto-sync-cfg
	exit 1	
fi

echo Updating $1 ...
cp -v $SOURCE_DIR/$1.ebuild ./$1.ebuild
patch -p1 < $PATCH_DIR/$1.ebuild.patch
# Why not just plain -u you might ask here, well, this reduces the chances of patch fails when ebuilds are updated.
diff -U 1 $SOURCE_DIR/$1.ebuild ./$1.ebuild > $PATCH_DIR/$1.ebuild.patch
echo "Generated new diff for $1"
echo "Remember that generated patch does not include make_multilib changes"
